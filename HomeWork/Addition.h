#ifndef ADDITION_H
#define ADDITION_H

#pragma warning(disable : 4996)

#include "Base.h"

//Функция вставки нового узла перед первым узлом	
//Предусловие: на вход поступает указатель на первый элемент списка и элемент, который необходимо вставить
//Постусловие: функция вставляет элемент в начало списка
void insertBeforeFirst(Item*& list, Item* node);

//Функция удаления сведений по счету
//Предусловие: на вход поступает указатель на первый элемент списка
//Постусловие: функция удаляет всех пользователей (все записи о них), у которых общая сумма вклада равна нулю
void deletingAccountInformation(Item*& list);

//Функция создания нового списка с остатками по всем видам операций одного счета из исходного
//Предусловие: на вход поступает указатель на первый элемент списка и номер банковского счета
//Постусловие: функция создает список из всех операций по данному банковскуму счету, изменяет дату в каждом узле на текущую и возвращает указатель на список
Item* createListFromOriginal(Item*& list, int account_number);

//Функция создания списка вставкой перед первым узлом
//Предусловие: на вход поступает указатель на первый элемент списка и содержание всех полей узла
//Постусловие: функция добавляет в начало списка новый узел
void createList(Item*& list, int account_number, tm date, string type_of_operation, int deposit);

//Функция создания узла
//Предусловие: на вход поступает содержание всех полей узла
//Постусловие: функция создает новый узел
Item* createItem(int account_number, tm date, string type_of_operation, int deposit);

//Функция подсчета количества уникальных номеров банковских счетов (нахождение максимального номера банковского счета)
//Предусловие: на вход поступает ссылка на первый элемент списка
//Постусловие: функция находит максимальное значение поля (номер банковского счета) среди всех элементов списка и создает глобальный массив данной размерности
void countingNumberAccounts(Item* list);

//Функции определения общей суммы вклада для каждого счета
//Предусловие: на вход поступает ссылка на первый элемент списка
//Постусловие: функция подсчитывает общий вклад для всех банковских счетов внутри глобального массива за O(1)
void determiningTotalDeposit(Item* list);

//Функция удаления одного узла
//Предусловие: на вход поступает указатель на первый элемент списка и указатель на узел, который нужно удалить
//Постусловие: функция удаляет узел
void deleteItem(Item*& list, Item* node);

//Функция удаления всех узлов с заданным номером банковского счета
//Предусловие: на вход поступает указатель на первый элемент списка и номер банковского счета, для которого нужно удалить все элементы
//Постусловие: функция удаляет все узлы, у которых поле account_number совпадает с параметром
void deleteItem(Item*& list, int account_number);

//Функция изменения даты
//Предусловие: на вход поступает указатель на узел
//Постусловие: функция изменяет поле (дата) на значение текущей даты
void changeDate(Item* node);

#endif